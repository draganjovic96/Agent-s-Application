//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgentApplication.AccommodationServiceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.projectXml.com/service", ConfigurationName="AccommodationServiceService.ServicePort")]
    public interface ServicePort {
        
        // CODEGEN: Generating message contract since the operation addAccommodationService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AgentApplication.AccommodationServiceService.addAccommodationServiceResponse1 addAccommodationService(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.addAccommodationServiceResponse1> addAccommodationServiceAsync(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1 request);
        
        // CODEGEN: Generating message contract since the operation getAccommodationServices is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AgentApplication.AccommodationServiceService.getAccommodationServicesResponse1 getAccommodationServices(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getAccommodationServicesResponse1> getAccommodationServicesAsync(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation removeAccommodationService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void removeAccommodationService(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="")]
        System.Threading.Tasks.Task removeAccommodationServiceAsync(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1 request);
        
        // CODEGEN: Generating message contract since the operation removeService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void removeService(AgentApplication.AccommodationServiceService.removeServiceRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="")]
        System.Threading.Tasks.Task removeServiceAsync(AgentApplication.AccommodationServiceService.removeServiceRequest1 request);
        
        // CODEGEN: Generating message contract since the operation getServices is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AgentApplication.AccommodationServiceService.getServicesResponse1 getServices(AgentApplication.AccommodationServiceService.getServicesRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getServicesResponse1> getServicesAsync(AgentApplication.AccommodationServiceService.getServicesRequest1 request);
        
        // CODEGEN: Generating message contract since the operation getService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AgentApplication.AccommodationServiceService.getServiceResponse1 getService(AgentApplication.AccommodationServiceService.getServiceRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getServiceResponse1> getServiceAsync(AgentApplication.AccommodationServiceService.getServiceRequest1 request);
        
        // CODEGEN: Generating message contract since the operation addService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        AgentApplication.AccommodationServiceService.addServiceResponse1 addService(AgentApplication.AccommodationServiceService.addServiceRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.addServiceResponse1> addServiceAsync(AgentApplication.AccommodationServiceService.addServiceRequest1 request);
        
        // CODEGEN: Generating message contract since the operation updateService is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateService(AgentApplication.AccommodationServiceService.updateServiceRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="")]
        System.Threading.Tasks.Task updateServiceAsync(AgentApplication.AccommodationServiceService.updateServiceRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class addAccommodationServiceRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long accommodationIdField;
        
        private long serviceIdField;
        
        private service serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long accommodationId {
            get {
                return this.accommodationIdField;
            }
            set {
                this.accommodationIdField = value;
                this.RaisePropertyChanged("accommodationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long serviceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
                this.RaisePropertyChanged("serviceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public service service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("service");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.projectXml.com/service")]
    public partial class service : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long idField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class addAccommodationServiceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public service service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("service");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addAccommodationServiceRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.addAccommodationServiceRequest addAccommodationServiceRequest;
        
        public addAccommodationServiceRequest1() {
        }
        
        public addAccommodationServiceRequest1(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest addAccommodationServiceRequest) {
            this.addAccommodationServiceRequest = addAccommodationServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addAccommodationServiceResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.addAccommodationServiceResponse addAccommodationServiceResponse;
        
        public addAccommodationServiceResponse1() {
        }
        
        public addAccommodationServiceResponse1(AgentApplication.AccommodationServiceService.addAccommodationServiceResponse addAccommodationServiceResponse) {
            this.addAccommodationServiceResponse = addAccommodationServiceResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class getAccommodationServicesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long accommodationIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long accommodationId {
            get {
                return this.accommodationIdField;
            }
            set {
                this.accommodationIdField = value;
                this.RaisePropertyChanged("accommodationId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class getAccommodationServicesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service[] servicesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Services", IsNullable=false)]
        public service[] services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
                this.RaisePropertyChanged("services");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAccommodationServicesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.getAccommodationServicesRequest getAccommodationServicesRequest;
        
        public getAccommodationServicesRequest1() {
        }
        
        public getAccommodationServicesRequest1(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest getAccommodationServicesRequest) {
            this.getAccommodationServicesRequest = getAccommodationServicesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAccommodationServicesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.getAccommodationServicesResponse getAccommodationServicesResponse;
        
        public getAccommodationServicesResponse1() {
        }
        
        public getAccommodationServicesResponse1(AgentApplication.AccommodationServiceService.getAccommodationServicesResponse getAccommodationServicesResponse) {
            this.getAccommodationServicesResponse = getAccommodationServicesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class removeAccommodationServiceRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long accommodationIdField;
        
        private long accommodationServiceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long accommodationId {
            get {
                return this.accommodationIdField;
            }
            set {
                this.accommodationIdField = value;
                this.RaisePropertyChanged("accommodationId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long accommodationServiceId {
            get {
                return this.accommodationServiceIdField;
            }
            set {
                this.accommodationServiceIdField = value;
                this.RaisePropertyChanged("accommodationServiceId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class removeAccommodationServiceRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest removeAccommodationServiceRequest;
        
        public removeAccommodationServiceRequest1() {
        }
        
        public removeAccommodationServiceRequest1(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest removeAccommodationServiceRequest) {
            this.removeAccommodationServiceRequest = removeAccommodationServiceRequest;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class removeServiceRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long serviceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long serviceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
                this.RaisePropertyChanged("serviceId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class removeServiceRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.removeServiceRequest removeServiceRequest;
        
        public removeServiceRequest1() {
        }
        
        public removeServiceRequest1(AgentApplication.AccommodationServiceService.removeServiceRequest removeServiceRequest) {
            this.removeServiceRequest = removeServiceRequest;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class getServicesRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class getServicesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service[] servicesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Services", IsNullable=false)]
        public service[] services {
            get {
                return this.servicesField;
            }
            set {
                this.servicesField = value;
                this.RaisePropertyChanged("services");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getServicesRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.getServicesRequest getServicesRequest;
        
        public getServicesRequest1() {
        }
        
        public getServicesRequest1(AgentApplication.AccommodationServiceService.getServicesRequest getServicesRequest) {
            this.getServicesRequest = getServicesRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getServicesResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.getServicesResponse getServicesResponse;
        
        public getServicesResponse1() {
        }
        
        public getServicesResponse1(AgentApplication.AccommodationServiceService.getServicesResponse getServicesResponse) {
            this.getServicesResponse = getServicesResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class getServiceRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long serviceIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long serviceId {
            get {
                return this.serviceIdField;
            }
            set {
                this.serviceIdField = value;
                this.RaisePropertyChanged("serviceId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class getServiceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public service service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("service");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getServiceRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.getServiceRequest getServiceRequest;
        
        public getServiceRequest1() {
        }
        
        public getServiceRequest1(AgentApplication.AccommodationServiceService.getServiceRequest getServiceRequest) {
            this.getServiceRequest = getServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getServiceResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.getServiceResponse getServiceResponse;
        
        public getServiceResponse1() {
        }
        
        public getServiceResponse1(AgentApplication.AccommodationServiceService.getServiceResponse getServiceResponse) {
            this.getServiceResponse = getServiceResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class addServiceRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public service service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("service");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class addServiceResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public service service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("service");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addServiceRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.addServiceRequest addServiceRequest;
        
        public addServiceRequest1() {
        }
        
        public addServiceRequest1(AgentApplication.AccommodationServiceService.addServiceRequest addServiceRequest) {
            this.addServiceRequest = addServiceRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class addServiceResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.addServiceResponse addServiceResponse;
        
        public addServiceResponse1() {
        }
        
        public addServiceResponse1(AgentApplication.AccommodationServiceService.addServiceResponse addServiceResponse) {
            this.addServiceResponse = addServiceResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.projectXml.com/service")]
    public partial class updateServiceRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private service serviceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public service service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("service");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class updateServiceRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.projectXml.com/service", Order=0)]
        public AgentApplication.AccommodationServiceService.updateServiceRequest updateServiceRequest;
        
        public updateServiceRequest1() {
        }
        
        public updateServiceRequest1(AgentApplication.AccommodationServiceService.updateServiceRequest updateServiceRequest) {
            this.updateServiceRequest = updateServiceRequest;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServicePortChannel : AgentApplication.AccommodationServiceService.ServicePort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePortClient : System.ServiceModel.ClientBase<AgentApplication.AccommodationServiceService.ServicePort>, AgentApplication.AccommodationServiceService.ServicePort {
        
        public ServicePortClient() {
        }
        
        public ServicePortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AgentApplication.AccommodationServiceService.addAccommodationServiceResponse1 AgentApplication.AccommodationServiceService.ServicePort.addAccommodationService(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1 request) {
            return base.Channel.addAccommodationService(request);
        }
        
        public AgentApplication.AccommodationServiceService.addAccommodationServiceResponse addAccommodationService(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest addAccommodationServiceRequest) {
            AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1();
            inValue.addAccommodationServiceRequest = addAccommodationServiceRequest;
            AgentApplication.AccommodationServiceService.addAccommodationServiceResponse1 retVal = ((AgentApplication.AccommodationServiceService.ServicePort)(this)).addAccommodationService(inValue);
            return retVal.addAccommodationServiceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.addAccommodationServiceResponse1> AgentApplication.AccommodationServiceService.ServicePort.addAccommodationServiceAsync(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1 request) {
            return base.Channel.addAccommodationServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.addAccommodationServiceResponse1> addAccommodationServiceAsync(AgentApplication.AccommodationServiceService.addAccommodationServiceRequest addAccommodationServiceRequest) {
            AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.addAccommodationServiceRequest1();
            inValue.addAccommodationServiceRequest = addAccommodationServiceRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).addAccommodationServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AgentApplication.AccommodationServiceService.getAccommodationServicesResponse1 AgentApplication.AccommodationServiceService.ServicePort.getAccommodationServices(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1 request) {
            return base.Channel.getAccommodationServices(request);
        }
        
        public AgentApplication.AccommodationServiceService.getAccommodationServicesResponse getAccommodationServices(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest getAccommodationServicesRequest) {
            AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1 inValue = new AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1();
            inValue.getAccommodationServicesRequest = getAccommodationServicesRequest;
            AgentApplication.AccommodationServiceService.getAccommodationServicesResponse1 retVal = ((AgentApplication.AccommodationServiceService.ServicePort)(this)).getAccommodationServices(inValue);
            return retVal.getAccommodationServicesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getAccommodationServicesResponse1> AgentApplication.AccommodationServiceService.ServicePort.getAccommodationServicesAsync(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1 request) {
            return base.Channel.getAccommodationServicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getAccommodationServicesResponse1> getAccommodationServicesAsync(AgentApplication.AccommodationServiceService.getAccommodationServicesRequest getAccommodationServicesRequest) {
            AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1 inValue = new AgentApplication.AccommodationServiceService.getAccommodationServicesRequest1();
            inValue.getAccommodationServicesRequest = getAccommodationServicesRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).getAccommodationServicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AgentApplication.AccommodationServiceService.ServicePort.removeAccommodationService(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1 request) {
            base.Channel.removeAccommodationService(request);
        }
        
        public void removeAccommodationService(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest removeAccommodationServiceRequest) {
            AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1();
            inValue.removeAccommodationServiceRequest = removeAccommodationServiceRequest;
            ((AgentApplication.AccommodationServiceService.ServicePort)(this)).removeAccommodationService(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task AgentApplication.AccommodationServiceService.ServicePort.removeAccommodationServiceAsync(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1 request) {
            return base.Channel.removeAccommodationServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task removeAccommodationServiceAsync(AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest removeAccommodationServiceRequest) {
            AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.removeAccommodationServiceRequest1();
            inValue.removeAccommodationServiceRequest = removeAccommodationServiceRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).removeAccommodationServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AgentApplication.AccommodationServiceService.ServicePort.removeService(AgentApplication.AccommodationServiceService.removeServiceRequest1 request) {
            base.Channel.removeService(request);
        }
        
        public void removeService(AgentApplication.AccommodationServiceService.removeServiceRequest removeServiceRequest) {
            AgentApplication.AccommodationServiceService.removeServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.removeServiceRequest1();
            inValue.removeServiceRequest = removeServiceRequest;
            ((AgentApplication.AccommodationServiceService.ServicePort)(this)).removeService(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task AgentApplication.AccommodationServiceService.ServicePort.removeServiceAsync(AgentApplication.AccommodationServiceService.removeServiceRequest1 request) {
            return base.Channel.removeServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task removeServiceAsync(AgentApplication.AccommodationServiceService.removeServiceRequest removeServiceRequest) {
            AgentApplication.AccommodationServiceService.removeServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.removeServiceRequest1();
            inValue.removeServiceRequest = removeServiceRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).removeServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AgentApplication.AccommodationServiceService.getServicesResponse1 AgentApplication.AccommodationServiceService.ServicePort.getServices(AgentApplication.AccommodationServiceService.getServicesRequest1 request) {
            return base.Channel.getServices(request);
        }
        
        public AgentApplication.AccommodationServiceService.getServicesResponse getServices(AgentApplication.AccommodationServiceService.getServicesRequest getServicesRequest) {
            AgentApplication.AccommodationServiceService.getServicesRequest1 inValue = new AgentApplication.AccommodationServiceService.getServicesRequest1();
            inValue.getServicesRequest = getServicesRequest;
            AgentApplication.AccommodationServiceService.getServicesResponse1 retVal = ((AgentApplication.AccommodationServiceService.ServicePort)(this)).getServices(inValue);
            return retVal.getServicesResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getServicesResponse1> AgentApplication.AccommodationServiceService.ServicePort.getServicesAsync(AgentApplication.AccommodationServiceService.getServicesRequest1 request) {
            return base.Channel.getServicesAsync(request);
        }
        
        public System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getServicesResponse1> getServicesAsync(AgentApplication.AccommodationServiceService.getServicesRequest getServicesRequest) {
            AgentApplication.AccommodationServiceService.getServicesRequest1 inValue = new AgentApplication.AccommodationServiceService.getServicesRequest1();
            inValue.getServicesRequest = getServicesRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).getServicesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AgentApplication.AccommodationServiceService.getServiceResponse1 AgentApplication.AccommodationServiceService.ServicePort.getService(AgentApplication.AccommodationServiceService.getServiceRequest1 request) {
            return base.Channel.getService(request);
        }
        
        public AgentApplication.AccommodationServiceService.getServiceResponse getService(AgentApplication.AccommodationServiceService.getServiceRequest getServiceRequest) {
            AgentApplication.AccommodationServiceService.getServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.getServiceRequest1();
            inValue.getServiceRequest = getServiceRequest;
            AgentApplication.AccommodationServiceService.getServiceResponse1 retVal = ((AgentApplication.AccommodationServiceService.ServicePort)(this)).getService(inValue);
            return retVal.getServiceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getServiceResponse1> AgentApplication.AccommodationServiceService.ServicePort.getServiceAsync(AgentApplication.AccommodationServiceService.getServiceRequest1 request) {
            return base.Channel.getServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.getServiceResponse1> getServiceAsync(AgentApplication.AccommodationServiceService.getServiceRequest getServiceRequest) {
            AgentApplication.AccommodationServiceService.getServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.getServiceRequest1();
            inValue.getServiceRequest = getServiceRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).getServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AgentApplication.AccommodationServiceService.addServiceResponse1 AgentApplication.AccommodationServiceService.ServicePort.addService(AgentApplication.AccommodationServiceService.addServiceRequest1 request) {
            return base.Channel.addService(request);
        }
        
        public AgentApplication.AccommodationServiceService.addServiceResponse addService(AgentApplication.AccommodationServiceService.addServiceRequest addServiceRequest) {
            AgentApplication.AccommodationServiceService.addServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.addServiceRequest1();
            inValue.addServiceRequest = addServiceRequest;
            AgentApplication.AccommodationServiceService.addServiceResponse1 retVal = ((AgentApplication.AccommodationServiceService.ServicePort)(this)).addService(inValue);
            return retVal.addServiceResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.addServiceResponse1> AgentApplication.AccommodationServiceService.ServicePort.addServiceAsync(AgentApplication.AccommodationServiceService.addServiceRequest1 request) {
            return base.Channel.addServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<AgentApplication.AccommodationServiceService.addServiceResponse1> addServiceAsync(AgentApplication.AccommodationServiceService.addServiceRequest addServiceRequest) {
            AgentApplication.AccommodationServiceService.addServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.addServiceRequest1();
            inValue.addServiceRequest = addServiceRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).addServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AgentApplication.AccommodationServiceService.ServicePort.updateService(AgentApplication.AccommodationServiceService.updateServiceRequest1 request) {
            base.Channel.updateService(request);
        }
        
        public void updateService(AgentApplication.AccommodationServiceService.updateServiceRequest updateServiceRequest) {
            AgentApplication.AccommodationServiceService.updateServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.updateServiceRequest1();
            inValue.updateServiceRequest = updateServiceRequest;
            ((AgentApplication.AccommodationServiceService.ServicePort)(this)).updateService(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task AgentApplication.AccommodationServiceService.ServicePort.updateServiceAsync(AgentApplication.AccommodationServiceService.updateServiceRequest1 request) {
            return base.Channel.updateServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task updateServiceAsync(AgentApplication.AccommodationServiceService.updateServiceRequest updateServiceRequest) {
            AgentApplication.AccommodationServiceService.updateServiceRequest1 inValue = new AgentApplication.AccommodationServiceService.updateServiceRequest1();
            inValue.updateServiceRequest = updateServiceRequest;
            return ((AgentApplication.AccommodationServiceService.ServicePort)(this)).updateServiceAsync(inValue);
        }
    }
}
